import * as express from 'express';
import * as inversify from 'inversify';
import * as interfaces from './interfaces';
export declare class InversifyExpressServer {
    private _router;
    private _container;
    private _app;
    private _configFn;
    private _errorConfigFn;
    private _routingConfig;
    private _AuthProvider;
    private _forceControllers;
    constructor(container: inversify.interfaces.Container, customRouter?: express.Router | null, routingConfig?: interfaces.RoutingConfig | null, customApp?: express.Application | null, authProvider?: (new () => interfaces.AuthProvider) | null, forceControllers?: boolean);
    setConfig(fn: interfaces.ConfigFunction): InversifyExpressServer;
    setErrorConfig(fn: interfaces.ConfigFunction): InversifyExpressServer;
    build(): express.Application;
    private registerControllers;
    private resolveMidleware;
    private copyHeadersTo;
    private handleHttpResponseMessage;
    private handlerFactory;
    private _getHttpContext;
    private _createHttpContext;
    private _getCurrentUser;
    private extractParameters;
    private getParam;
    private _getPrincipal;
}
